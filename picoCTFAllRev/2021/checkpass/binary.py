sbox = "a5e08208683816fdbdad147eab1eeba6cf3637cce9884f3ac3065daf950fb35892fc8ce5602bc2696622b80def845fa0d76e2acb462cf1b1a9ded5b7ce3962e8700c21c6647dbbc1982002ff7f556b6cf454f056c9579dd0c5814367dff847b5799f3c1f9c18809a8d30d9942f42503574118e4ec404b0e15c3d72c7196a4d49031591991a05c0e7528b6f59f985d3bc25cdb6dbec5b7bf6aa731dfe26413ea353ed5a34eaac1790103363a7d276f7be834a7a0adc45d648ee24f24412311c32da5e232da8a4001b4078657c71d887dd013b4bbf27616d0ba1e3d1519ed4fbaefaf3b40eca9309c8b997754ce4963f9b77e6291307b22e8928e2a28f8a86f5ba690264134bd2e4f584ecc0e148125b94b58bed6557d00f3e3788d3e034e82d9bad462a1f592e6cc80ede6ab679872297c51419ddc1b79042b3ebe7174d55fe0df633c6e66de2b10347f326fc161bc2280760ac768d6f61cb6b809d15af38b0d1d4583d83fba61aa3737824e541eacc3ff98fbe9f6e4449bba74c40b2f231cad7e9b872b954325cd5c74a1108ba75dcbd7d186227918a74cd35987b05c343a5f129ff71e34e522551c42f1e95ab6656927f0a20da93d6b439109ed8bc04ce5d8e8c3aa900dffa3b6768537aa2454f7c06a4811c89d9a02c2196a15f77ae86829caaf4dbcfbfa863f80b093cc9eff02b5aee990130855e7e361dfd50700c9a23f7ce6aebc54716e8dc8c39afb31fc3687efd10da3c1e1557a3e3a84e050a7674e09777939f7b7131f53bacb49bc65e9a372201d49987e4ada76b24146462ea527c385cccfc2354482509952eb134e1ff173aefc9503efb72d04d2a4ba6f485ca0030c16c4635dd84942f56e96d55068b369e5dd53f906067f688b079d8a1fa028d49f18182b94369ee5b04e2610eb7c0f028a973831cbe4c1375911bcdbd7f0c861aa4d28af74445ab3242cfde198e4f6f6ec7b8eda541c8290d965963d6baf83ddb9d789826a2fe2cbc27890351d311d965e7e6330f92b59cbfcb1870c407ae7db22d8fc220f2aa40d7121db6585aa02b4af30bf95f08df7aec66bbe553d1218011834d6f1a0a91355f3e8014a9daf655d4e001ae770921659baa56a27010be86f11375191e6707f295257c69effe440f71c3edee6aa7d0b24c592ce32f967fe2a5e9cc2b0c76c89449bb1702ec8c640b04cbbaa61b4f1579978241bd744bb962e6c7c0545093f7a000e7ac03dc5ae5c11d7e3c2a4ad66cd9dbb3a3475120065bff9929fdc4a1fb85b1de28dd66345824c58deac660f3e19fcf23af2e405c7d18c273cdad438190225e2db5f5f09826d3f96bb4d51c1f399eb69c8845d23da852d14616caf46e7868083889c9920dabb036df3a63fa27bca4b8324e0e7b726d535dd78e37573087eb42129abf3be8e4b73f61ce05d8fcf831849d338b7a8f488a7372632f6d61696e2e72730000000000"
target = "1f68503eb8223acb2b83aecb2220f948057b7b74cdce4622cfe68dc712f9317b"
swapper = [11, 4, 19, 13, 9, 29, 24, 28, 12, 20, 16, 25, 15, 0, 10, 5, 26, 1, 14, 6, 30, 3, 8, 27, 2, 31, 21, 17, 22, 18, 23, 7, 28, 16, 31, 8, 27, 26, 0, 17, 25, 21, 9, 2, 18, 24, 7, 22, 30, 11, 10, 23, 20, 19, 5, 4, 13, 12, 1, 3, 14, 15, 29, 6, 7, 2, 18, 11, 17, 5, 24, 0, 31, 19, 1, 3, 29, 14, 30, 22, 27, 21, 4, 16, 28, 10, 12, 25, 13, 8, 20, 6, 9, 23, 15, 26, 18, 13, 20, 5, 12, 29, 23, 0, 15, 9, 2, 1, 4, 6, 8, 24, 11, 22, 16, 10, 28, 14, 17, 21, 30, 27, 26, 25, 19, 7, 3, 31]

def getHexList(s):
    length = len(s) // 2
    values = []
    for i in range(length):
        values.append(int(s[2*i:2*i+2], 16))
    return values
        

substitutions = []

for i in range(4):
    substitutions.append(getHexList(sbox[512 * i: 512 * i + 512]))

swaps = []

for i in range(4):
    swaps.append(swapper[32*i:32*i + 32])

final = getHexList(target)

